
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\tracks.season.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_tracks.season.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_tracks.season.py:


==========================
Individual Season Analysis
==========================
This sample script illustrates how to retrieve, visualize and analyze seasons from the HURDAT2 dataset.

.. GENERATED FROM PYTHON SOURCE LINES 7-10

.. code-block:: default


    import tropycal.tracks as tracks








.. GENERATED FROM PYTHON SOURCE LINES 11-16

HURTDAT2 Dataset
----------------
Let's start by creating an instance of a TrackDataset object. By default, this reads in the HURDAT2 dataset from the National Hurricane  Center (NHC) website. For this example we'll be using the HURDAT2 dataset over the North Atlantic basin.

HURDAT data is not available for the most recent hurricane seasons. To include the latest data up through today, the "include_btk" flag  would need to be set to True, which reads in preliminary best track data from the NHC website.

.. GENERATED FROM PYTHON SOURCE LINES 16-19

.. code-block:: default


    basin = tracks.TrackDataset(basin='north_atlantic',source='hurdat',include_btk=False)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    --> Starting to read in HURDAT2 data
    --> Completed reading in HURDAT2 data (4.66 seconds)




.. GENERATED FROM PYTHON SOURCE LINES 20-25

Individual season analysis
--------------------------
Individual seasons can be retrieved from the dataset by calling the ``get_season()`` function, which returns an instance of a Season object.

Let's retrieve an instance of the 2017 Atlantic Hurricane Season:

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: default


    season = basin.get_season(2017)








.. GENERATED FROM PYTHON SOURCE LINES 29-30

We can quickly visualize what the Season object contains by printing it:

.. GENERATED FROM PYTHON SOURCE LINES 30-33

.. code-block:: default


    print(season)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <tropycal.tracks.Season>
    Season Summary:
        Total Storms:      18
        Named Storms:      17
        Hurricanes:        10
        Major Hurricanes:  6
        Season ACE:        224.8

    More Information:
        year:          2017
        basin:         north_atlantic
        source_basin:  north_atlantic
        source:        hurdat
        source_info:   NHC Hurricane Database




.. GENERATED FROM PYTHON SOURCE LINES 34-35

The Season object can be converted to a Pandas DataFrame, which lists a summary of storms during the season:

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default


    season.to_dataframe()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>id</th>
          <th>name</th>
          <th>vmax</th>
          <th>mslp</th>
          <th>category</th>
          <th>ace</th>
          <th>start_time</th>
          <th>end_time</th>
          <th>start_lat</th>
          <th>start_lon</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>AL012017</td>
          <td>ARLENE</td>
          <td>45</td>
          <td>990</td>
          <td>0</td>
          <td>0.8</td>
          <td>2017-04-19 00:00:00</td>
          <td>2017-04-21 06:00:00</td>
          <td>31.1</td>
          <td>-42.6</td>
        </tr>
        <tr>
          <th>1</th>
          <td>AL022017</td>
          <td>BRET</td>
          <td>45</td>
          <td>1007</td>
          <td>0</td>
          <td>0.5</td>
          <td>2017-06-19 18:00:00</td>
          <td>2017-06-20 09:00:00</td>
          <td>9.2</td>
          <td>-58.9</td>
        </tr>
        <tr>
          <th>2</th>
          <td>AL032017</td>
          <td>CINDY</td>
          <td>50</td>
          <td>991</td>
          <td>0</td>
          <td>1.8</td>
          <td>2017-06-20 18:00:00</td>
          <td>2017-06-23 12:00:00</td>
          <td>25.6</td>
          <td>-90.6</td>
        </tr>
        <tr>
          <th>3</th>
          <td>AL042017</td>
          <td>FOUR</td>
          <td>25</td>
          <td>1009</td>
          <td>-1</td>
          <td>0.0</td>
          <td>2017-07-05 18:00:00</td>
          <td>2017-07-07 12:00:00</td>
          <td>12.0</td>
          <td>-37.1</td>
        </tr>
        <tr>
          <th>4</th>
          <td>AL052017</td>
          <td>DON</td>
          <td>45</td>
          <td>1005</td>
          <td>0</td>
          <td>0.8</td>
          <td>2017-07-17 06:00:00</td>
          <td>2017-07-18 12:00:00</td>
          <td>10.4</td>
          <td>-49.1</td>
        </tr>
        <tr>
          <th>5</th>
          <td>AL062017</td>
          <td>EMILY</td>
          <td>50</td>
          <td>1001</td>
          <td>0</td>
          <td>0.6</td>
          <td>2017-07-30 18:00:00</td>
          <td>2017-08-01 18:00:00</td>
          <td>28.4</td>
          <td>-85.4</td>
        </tr>
        <tr>
          <th>6</th>
          <td>AL072017</td>
          <td>FRANKLIN</td>
          <td>75</td>
          <td>981</td>
          <td>1</td>
          <td>3.7</td>
          <td>2017-08-07 00:00:00</td>
          <td>2017-08-10 12:00:00</td>
          <td>16.1</td>
          <td>-82.7</td>
        </tr>
        <tr>
          <th>7</th>
          <td>AL082017</td>
          <td>GERT</td>
          <td>95</td>
          <td>962</td>
          <td>2</td>
          <td>7.8</td>
          <td>2017-08-12 18:00:00</td>
          <td>2017-08-17 12:00:00</td>
          <td>24.0</td>
          <td>-69.4</td>
        </tr>
        <tr>
          <th>8</th>
          <td>AL092017</td>
          <td>HARVEY</td>
          <td>115</td>
          <td>937</td>
          <td>4</td>
          <td>11.4</td>
          <td>2017-08-17 06:00:00</td>
          <td>2017-09-01 00:00:00</td>
          <td>13.4</td>
          <td>-52.0</td>
        </tr>
        <tr>
          <th>9</th>
          <td>AL112017</td>
          <td>IRMA</td>
          <td>155</td>
          <td>914</td>
          <td>5</td>
          <td>64.9</td>
          <td>2017-08-30 00:00:00</td>
          <td>2017-09-12 00:00:00</td>
          <td>16.1</td>
          <td>-26.9</td>
        </tr>
        <tr>
          <th>10</th>
          <td>AL122017</td>
          <td>JOSE</td>
          <td>135</td>
          <td>938</td>
          <td>4</td>
          <td>43.3</td>
          <td>2017-09-05 06:00:00</td>
          <td>2017-09-22 12:00:00</td>
          <td>11.6</td>
          <td>-37.9</td>
        </tr>
        <tr>
          <th>11</th>
          <td>AL132017</td>
          <td>KATIA</td>
          <td>90</td>
          <td>972</td>
          <td>2</td>
          <td>6.1</td>
          <td>2017-09-05 12:00:00</td>
          <td>2017-09-09 12:00:00</td>
          <td>22.2</td>
          <td>-97.2</td>
        </tr>
        <tr>
          <th>12</th>
          <td>AL142017</td>
          <td>LEE</td>
          <td>100</td>
          <td>962</td>
          <td>3</td>
          <td>17.9</td>
          <td>2017-09-14 18:00:00</td>
          <td>2017-09-30 00:00:00</td>
          <td>10.4</td>
          <td>-23.1</td>
        </tr>
        <tr>
          <th>13</th>
          <td>AL152017</td>
          <td>MARIA</td>
          <td>150</td>
          <td>908</td>
          <td>5</td>
          <td>44.8</td>
          <td>2017-09-16 12:00:00</td>
          <td>2017-09-30 12:00:00</td>
          <td>12.2</td>
          <td>-49.7</td>
        </tr>
        <tr>
          <th>14</th>
          <td>AL162017</td>
          <td>NATE</td>
          <td>80</td>
          <td>981</td>
          <td>1</td>
          <td>4.1</td>
          <td>2017-10-04 12:00:00</td>
          <td>2017-10-08 18:00:00</td>
          <td>12.0</td>
          <td>-81.8</td>
        </tr>
        <tr>
          <th>15</th>
          <td>AL172017</td>
          <td>OPHELIA</td>
          <td>100</td>
          <td>959</td>
          <td>3</td>
          <td>14.5</td>
          <td>2017-10-09 06:00:00</td>
          <td>2017-10-15 18:00:00</td>
          <td>30.9</td>
          <td>-40.0</td>
        </tr>
        <tr>
          <th>16</th>
          <td>AL182017</td>
          <td>PHILIPPE</td>
          <td>35</td>
          <td>1000</td>
          <td>0</td>
          <td>0.1</td>
          <td>2017-10-28 12:00:00</td>
          <td>2017-10-29 00:00:00</td>
          <td>20.1</td>
          <td>-83.5</td>
        </tr>
        <tr>
          <th>17</th>
          <td>AL192017</td>
          <td>RINA</td>
          <td>50</td>
          <td>991</td>
          <td>0</td>
          <td>1.7</td>
          <td>2017-11-05 18:00:00</td>
          <td>2017-11-09 00:00:00</td>
          <td>29.2</td>
          <td>-51.7</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 39-40

A more detailed summary of the season can be retrieved using the `summary()` method:

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default


    print(season.summary())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    {'id': ['AL012017', 'AL022017', 'AL032017', 'AL042017', 'AL052017', 'AL062017', 'AL072017', 'AL082017', 'AL092017', 'AL112017', 'AL122017', 'AL132017', 'AL142017', 'AL152017', 'AL162017', 'AL172017', 'AL182017', 'AL192017'], 'operational_id': ['AL012017', 'AL022017', 'AL032017', 'AL042017', 'AL052017', 'AL062017', 'AL072017', 'AL082017', 'AL092017', 'AL112017', 'AL122017', 'AL132017', 'AL142017', 'AL152017', 'AL162017', 'AL172017', 'AL182017', 'AL192017'], 'name': ['ARLENE', 'BRET', 'CINDY', 'FOUR', 'DON', 'EMILY', 'FRANKLIN', 'GERT', 'HARVEY', 'IRMA', 'JOSE', 'KATIA', 'LEE', 'MARIA', 'NATE', 'OPHELIA', 'PHILIPPE', 'RINA'], 'max_wspd': [45, 45, 50, 25, 45, 50, 75, 95, 115, 155, 135, 90, 100, 150, 80, 100, 35, 50], 'min_mslp': [990, 1007, 991, 1009, 1005, 1001, 981, 962, 937, 914, 938, 972, 962, 908, 981, 959, 1000, 991], 'category': [0, 0, 0, -1, 0, 0, 1, 2, 4, 5, 4, 2, 3, 5, 1, 3, 0, 0], 'ace': [0.8, 0.5, 1.8, 0.0, 0.8, 0.6, 3.7, 7.8, 11.4, 64.9, 43.3, 6.1, 17.9, 44.8, 4.1, 14.5, 0.1, 1.7], 'season_start': datetime.datetime(2017, 4, 19, 0, 0), 'season_end': datetime.datetime(2017, 11, 9, 0, 0), 'season_storms': 18, 'season_named': 17, 'season_hurricane': 10, 'season_major': 6, 'season_ace': 224.8, 'season_subtrop_pure': 0, 'season_subtrop_partial': 0}




.. GENERATED FROM PYTHON SOURCE LINES 44-49

Plot Season
-----------
Plotting a Season object can be quickly done using the ``plot()`` method.

Note that you can pass various arguments to the plot function, such as customizing the map and track aspects. The "Customizing Storm Plots" example script has more examples on how to customize such plots. Read through the documentation for more customization options.

.. GENERATED FROM PYTHON SOURCE LINES 49-52

.. code-block:: default


    season.plot()




.. image-sg:: /examples/images/sphx_glr_tracks.season_001.png
   :alt: 2017 Atlantic Hurricane Season, 17 named • 10 hurricanes • 6 major 224.8 Cumulative ACE
   :srcset: /examples/images/sphx_glr_tracks.season_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <GeoAxesSubplot:title={'left':'2017 Atlantic Hurricane Season','right':'17 named • 10 hurricanes • 6 major\n224.8 Cumulative ACE'}>



.. GENERATED FROM PYTHON SOURCE LINES 53-56

Multiple Season Analysis
------------------------
Seasons can also be combined for multi-season analyses by simply adding multiple season objects together.

.. GENERATED FROM PYTHON SOURCE LINES 56-65

.. code-block:: default


    season1 = basin.get_season(2017)
    season2 = basin.get_season(2018)
    season3 = basin.get_season(2021)

    combined = season1 + season2 + season3

    print(combined)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <tropycal.tracks.Season>
    Season Summary:
        Total Storms:      [18, 16, 21]
        Named Storms:      [17, 15, 21]
        Hurricanes:        [10, 8, 7]
        Major Hurricanes:  [6, 2, 4]
        Season ACE:        [224.8, 132.5, 145.3]

    More Information:
        year:          [2017, 2018, 2021]
        basin:         north_atlantic
        source_basin:  north_atlantic
        source:        hurdat
        source_info:   NHC Hurricane Database




.. GENERATED FROM PYTHON SOURCE LINES 66-67

The combined seasons can then be plotted on the same map:

.. GENERATED FROM PYTHON SOURCE LINES 67-70

.. code-block:: default


    combined.plot()




.. image-sg:: /examples/images/sphx_glr_tracks.season_002.png
   :alt: [2017, 2018, 2021] Atlantic Hurricane Season, 53 named • 25 hurricanes • 12 major 502.6 Cumulative ACE
   :srcset: /examples/images/sphx_glr_tracks.season_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <GeoAxesSubplot:title={'left':'[2017, 2018, 2021] Atlantic Hurricane Season','right':'53 named • 25 hurricanes • 12 major\n502.6 Cumulative ACE'}>



.. GENERATED FROM PYTHON SOURCE LINES 71-72

The summary method also generates summaries for all seasons in this object:

.. GENERATED FROM PYTHON SOURCE LINES 72-73

.. code-block:: default


    print(combined.summary())



.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    {'id': [['AL012017', 'AL022017', 'AL032017', 'AL042017', 'AL052017', 'AL062017', 'AL072017', 'AL082017', 'AL092017', 'AL112017', 'AL122017', 'AL132017', 'AL142017', 'AL152017', 'AL162017', 'AL172017', 'AL182017', 'AL192017'], ['AL012018', 'AL022018', 'AL032018', 'AL042018', 'AL052018', 'AL062018', 'AL072018', 'AL082018', 'AL092018', 'AL102018', 'AL112018', 'AL122018', 'AL132018', 'AL142018', 'AL152018', 'AL162018'], ['AL012021', 'AL022021', 'AL032021', 'AL042021', 'AL052021', 'AL062021', 'AL072021', 'AL082021', 'AL092021', 'AL102021', 'AL112021', 'AL122021', 'AL132021', 'AL142021', 'AL152021', 'AL162021', 'AL172021', 'AL182021', 'AL192021', 'AL202021', 'AL212021']], 'operational_id': [['AL012017', 'AL022017', 'AL032017', 'AL042017', 'AL052017', 'AL062017', 'AL072017', 'AL082017', 'AL092017', 'AL112017', 'AL122017', 'AL132017', 'AL142017', 'AL152017', 'AL162017', 'AL172017', 'AL182017', 'AL192017'], ['AL012018', 'AL022018', 'AL032018', 'AL042018', 'AL052018', 'AL062018', 'AL072018', 'AL082018', 'AL092018', 'AL102018', 'AL112018', 'AL122018', 'AL132018', 'AL142018', 'AL152018', 'AL162018'], ['AL012021', 'AL022021', 'AL032021', 'AL042021', 'AL052021', 'AL062021', 'AL072021', 'AL082021', 'AL092021', 'AL102021', 'AL112021', 'AL122021', 'AL132021', 'AL142021', 'AL152021', 'AL162021', 'AL172021', 'AL182021', 'AL192021', 'AL202021', 'AL212021']], 'name': [['ARLENE', 'BRET', 'CINDY', 'FOUR', 'DON', 'EMILY', 'FRANKLIN', 'GERT', 'HARVEY', 'IRMA', 'JOSE', 'KATIA', 'LEE', 'MARIA', 'NATE', 'OPHELIA', 'PHILIPPE', 'RINA'], ['ALBERTO', 'BERYL', 'CHRIS', 'DEBBY', 'ERNESTO', 'FLORENCE', 'GORDON', 'HELENE', 'ISAAC', 'JOYCE', 'ELEVEN', 'KIRK', 'LESLIE', 'MICHAEL', 'NADINE', 'OSCAR'], ['ANA', 'BILL', 'CLAUDETTE', 'DANNY', 'ELSA', 'FRED', 'GRACE', 'HENRI', 'IDA', 'KATE', 'JULIAN', 'LARRY', 'MINDY', 'NICHOLAS', 'ODETTE', 'PETER', 'ROSE', 'SAM', 'TERESA', 'VICTOR', 'WANDA']], 'max_wspd': [[45, 45, 50, 25, 45, 50, 75, 95, 115, 155, 135, 90, 100, 150, 80, 100, 35, 50], [55, 70, 90, 45, 40, 130, 60, 95, 65, 45, 30, 55, 80, 140, 55, 95], [40, 55, 40, 40, 75, 55, 105, 65, 130, 40, 50, 110, 50, 65, 40, 45, 50, 135, 40, 55, 50]], 'min_mslp': [[990, 1007, 991, 1009, 1005, 1001, 981, 962, 937, 914, 938, 972, 962, 908, 981, 959, 1000, 991], [990, 991, 969, 998, 1003, 937, 996, 967, 995, 995, 1007, 998, 968, 919, 995, 966], [1004, 992, 1003, 1009, 991, 991, 967, 986, 929, 1004, 993, 953, 1000, 988, 1005, 1005, 1004, 927, 1008, 997, 983]], 'category': [[0, 0, 0, -1, 0, 0, 1, 2, 4, 5, 4, 2, 3, 5, 1, 3, 0, 0], [0, 1, 2, 0, 0, 4, 0, 2, 1, 0, -1, 0, 1, 5, 0, 2], [0, 0, 0, 0, 1, 0, 3, 1, 4, 0, 0, 3, 0, 1, 0, 0, 0, 4, 0, 0, 0]], 'ace': [[0.8, 0.5, 1.8, 0.0, 0.8, 0.6, 3.7, 7.8, 11.4, 64.9, 43.3, 6.1, 17.9, 44.8, 4.1, 14.5, 0.1, 1.7], [1.8, 4.8, 7.4, 1.5, 1.4, 39.7, 2.3, 15.7, 6.8, 2.4, 0.0, 3.2, 21.3, 12.5, 2.7, 9.0], [0.8, 1.0, 1.1, 0.4, 9.9, 2.4, 8.6, 7.8, 10.6, 0.6, 1.1, 31.9, 0.4, 2.4, 0.4, 1.8, 1.4, 54.0, 0.6, 2.4, 5.7]], 'seasons': [2017, 2018, 2021], 'season_start': [datetime.datetime(2017, 4, 19, 0, 0), datetime.datetime(2018, 5, 25, 12, 0), datetime.datetime(2021, 5, 22, 6, 0)], 'season_end': [datetime.datetime(2017, 11, 9, 0, 0), datetime.datetime(2018, 10, 31, 12, 0), datetime.datetime(2021, 11, 7, 6, 0)], 'season_storms': [18, 16, 21], 'season_named': [17, 15, 21], 'season_hurricane': [10, 8, 7], 'season_major': [6, 2, 4], 'season_ace': [224.8, 132.5, 145.3], 'season_subtrop_pure': [0, 7, 3], 'season_subtrop_partial': [0, 7, 3]}





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.410 seconds)


.. _sphx_glr_download_examples_tracks.season.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: tracks.season.py <tracks.season.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: tracks.season.ipynb <tracks.season.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
