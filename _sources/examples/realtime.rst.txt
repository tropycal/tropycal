
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\realtime.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_realtime.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_realtime.py:


======================
Realtime Functionality
======================
This sample script shows how to use Tropycal to retrieve and plot real time tropical cyclones and potential formation. As this script was written on 2 June 2022, the data below is valid for the time this script was written.

.. GENERATED FROM PYTHON SOURCE LINES 7-10

.. code-block:: default


    from tropycal import realtime








.. GENERATED FROM PYTHON SOURCE LINES 11-19

Reading In Realtime Dataset
---------------------------

Let's start with the Realtime dataset by loading it into memory. By default, this reads in Best Track data from the National Hurricane Center (NHC) and filters for all active tropical cyclones and invests over the last 18 hours.

The default is to not include global storms in the Joint Typhoon Warning Center (JTWC)'s area of responsibility. To read in invests and storms within JTWC's domain, add a ``jtwc=True`` argument, followed by a ``jtwc_source`` argument which can be either "jtwc", "noaa", or "ucar". Read through the documentation to see the limits and pros/cons of each method.

To keep this demonstration simple, we'll solely focus on the North Atlantic basin.

.. GENERATED FROM PYTHON SOURCE LINES 19-22

.. code-block:: default


    realtime_obj = realtime.Realtime()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    --> Starting to read in current storm data
    --> Completed reading in current storm data (0.68 seconds)




.. GENERATED FROM PYTHON SOURCE LINES 23-27

View Current Activity
---------------------

To quickly view the content of the Realtime object, we can simply print it:

.. GENERATED FROM PYTHON SOURCE LINES 27-30

.. code-block:: default


    realtime_obj





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <tropycal.realtime.Realtime>
    Dataset Summary:
        Numbers of active storms: 1

    Active Storms:
        AL012022

    Active Invests:



.. GENERATED FROM PYTHON SOURCE LINES 31-32

Alternatively, we can also list all active storms, along with an optional filter by basin.

.. GENERATED FROM PYTHON SOURCE LINES 32-35

.. code-block:: default


    realtime_obj.list_active_storms(basin='north_atlantic')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['AL012022']



.. GENERATED FROM PYTHON SOURCE LINES 36-39

A new functionality with Tropycal v0.4 is to plot a summary of all ongoing activity, whether globally or by basin. This function can be highly customized, with more details in the documentation.

At the time this script was written, Potential Tropical Cyclone #1 is active in the western Caribbean, with a 90% of development into a tropical cyclone. This will be plotted in the summary below:

.. GENERATED FROM PYTHON SOURCE LINES 39-42

.. code-block:: default


    realtime_obj.plot_summary(domain='north_atlantic')




.. image-sg:: /examples/images/sphx_glr_realtime_001.png
   :alt: Summary & NHC 5-Day Formation Outlook, Valid: 22 UTC 02 Jun 2022
   :srcset: /examples/images/sphx_glr_realtime_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    C:\Users\Tomer4\anaconda3\envs\main\lib\site-packages\shapefile.py:391: UserWarning: Shapefile shape has invalid polygon: no exterior rings found (must have clockwise orientation); interpreting holes as exteriors.
      warnings.warn('Shapefile shape has invalid polygon: no exterior rings found (must have clockwise orientation); interpreting holes as exteriors.')

    <GeoAxesSubplot:title={'left':'Summary & NHC 5-Day Formation Outlook','right':'Valid: 22 UTC 02 Jun 2022'}>



.. GENERATED FROM PYTHON SOURCE LINES 43-46

Realtime Storms
---------------
To retrieve a storm from a Realtime object, simply use its ``get_storm()`` method and provide an ID as listed in ``list_active_storms()``:

.. GENERATED FROM PYTHON SOURCE LINES 46-49

.. code-block:: default


    storm = realtime_obj.get_storm('AL012022')








.. GENERATED FROM PYTHON SOURCE LINES 50-53

This now returns a RealtimeStorm object. RealtimeStorm objects inherit the same functionality as Storm objects, but have additional functions unique to realtime storms. Additionally, as these can also be valid for invests, certain functionality that is only available for tropical cyclones (e.g., NHC forecasts or discussions) is unavailable for invests.

Let's view what this RealtimeStorm object contains:

.. GENERATED FROM PYTHON SOURCE LINES 53-56

.. code-block:: default


    storm





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <tropycal.realtime.RealtimeStorm>
    Storm Summary:
        Maximum Wind:      N/A knots
        Minimum Pressure:  N/A hPa
        Start Date:        N/A
        End Date:          N/A

    Variables:
        date        (datetime) [2022-05-31 18:00:00 .... 2022-06-02 18:00:00]
        extra_obs   (int32) [0 .... 0]
        special     (str) [ .... ]
        type        (str) [DB .... LO]
        lat         (float64) [17.2 .... 21.3]
        lon         (float64) [-88.7 .... -87.5]
        vmax        (int32) [20 .... 30]
        mslp        (int32) [1008 .... 1004]
        wmo_basin   (str) [north_atlantic .... north_atlantic]

    More Information:
        id:              AL012022
        operational_id:  AL012022
        name:            ONE
        year:            2022
        season:          2022
        basin:           north_atlantic
        source_info:     NHC Hurricane Database
        invest:          False
        source_method:   NHC's Automated Tropical Cyclone Forecasting System (ATCF)
        source_url:      https://ftp.nhc.noaa.gov/atcf/btk/
        source:          hurdat
        ace:             0.0
        prob_2day:       90%
        prob_5day:       90%
        risk_2day:       High
        risk_5day:       High
        realtime:        True



.. GENERATED FROM PYTHON SOURCE LINES 57-58

A quick and easy way to check if a storm is an invest is by checking its ``invest`` attribute. This will let you know if you can use the full set of functionality available for tropical cyclones or not.

.. GENERATED FROM PYTHON SOURCE LINES 58-61

.. code-block:: default


    storm.invest





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    False



.. GENERATED FROM PYTHON SOURCE LINES 62-65

The next few blocks will overview functions unique to RealtimeStorm objects. We can easily retrieve the latest available forecast dictionary from NHC or JTWC, depending on what area of responsibility the storm is in.

This function also calculates the forecast Accumulated Cyclone Energy (ACE), derived by combining its observed ACE through the current time plus the forecast ACE using linearly interpolated forecast sustained wind.

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: default


    storm.get_forecast_realtime()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'fhr': [0, 3, 12, 24, 36, 48, 60, 72, 96, 120], 'lat': [21.3, 21.4, 22.3, 23.5, 24.8, 26.5, 28.7, 30.6, 33.5, 36.0], 'lon': [-87.5, -87.5, -87.4, -86.5, -84.9, -82.3, -79.3, -76.0, -70.0, -64.0], 'vmax': [30, 30, 30, 35, 35, 35, 40, 45, 45, 40], 'mslp': [nan, 1003, nan, nan, nan, nan, nan, nan, nan, nan], 'cumulative_ace': [0.0, 0.0, 0.1, 0.4, 0.6, 0.9, 1.3, 2.1, 2.8], 'cumulative_ace_fhr': [0, 12, 24, 36, 48, 60, 72, 96, 120], 'type': ['LO', 'LO', 'TD', 'TS', 'TS', 'TS', 'TD', 'TS', 'TS', 'TS'], 'init': datetime.datetime(2022, 6, 2, 18, 0)}



.. GENERATED FROM PYTHON SOURCE LINES 69-70

We can also plot it using the ``plot_forecast_realtime()`` method:

.. GENERATED FROM PYTHON SOURCE LINES 70-73

.. code-block:: default


    storm.plot_forecast_realtime()




.. image-sg:: /examples/images/sphx_glr_realtime_002.png
   :alt: Potential Tropical Cyclone ONE, Current Intensity: 35 mph • 1003 hPa NHC Issued: 2100 UTC 02 Jun 2022
   :srcset: /examples/images/sphx_glr_realtime_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <GeoAxesSubplot:title={'left':'Potential Tropical Cyclone ONE','right':'Current Intensity: 35 mph • 1003 hPa\nNHC Issued: 2100 UTC 02 Jun 2022'}>



.. GENERATED FROM PYTHON SOURCE LINES 74-75

Storm forecast discussions can also be retrieved for storms in NHC's area of responsibility, or the Prognostic Reasoning product for JTWC's area of responsibility.

.. GENERATED FROM PYTHON SOURCE LINES 75-78

.. code-block:: default


    storm.get_discussion_realtime()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'id': 1, 'time_issued': datetime.datetime(2022, 6, 2, 21, 0), 'text': 'ZCZC MIATCDAT1 ALL\nTTAA00 KNHC DDHHMM\n \nPotential Tropical Cyclone One Discussion Number   1\nNWS National Hurricane Center Miami FL       AL012022\n400 PM CDT Thu Jun 02 2022\n \nSatellite imagery, surface observations, and reports from an Air \nForce Reserve Hurricane Hunter aircraft show that a broad low \npressure area is centered over the northeastern part of the Yucatan \nPeninsula of Mexico.  This system is currently producing poorly \norganized convection in the northeastern quadrant due to the effects \nof 20-30 kt of southwesterly vertical wind shear.  The central \npressure is near 1003 mb, and earlier scatterometer data showed \nwinds near 30 kt well to the east of the center.  Due to the \npossibility that the system could become a tropical storm with \nimpacts in the Florida Keys, and portions of the Florida Peninsula \nand western Cuba, advisories are initiated on Potential Tropical \nCyclone One with tropical storm watches issued for those areas.\n\nThe initial motion is 360/3.  The system should turn northeastward \nduring the next 12-24 h as it encounters the southern edge of the \nmid-latitude westerlies, and a general northeastward motion should \ncontinue through the end of the forecast period.  The guidance is \nin good agreement that the system should cross the Florida \nPeninsula on Saturday.  It should be noted that the guidance \nsuggests the possibility that the center could re-form due to \nconvective bursts, which would cause jumps in the track \nsuperimposed on top of the general northeastward motion.\n\nThe intensity and structure forecasts for this system are very \nuncertain.  It has a large envelope and a large radius of maximum \nwinds, and a combination of moderate to strong shear and interaction \nwith an upper-level trough seem unfavorable for significant \ndevelopment over the Gulf of Mexico.  The guidance does suggests \nslight development despite the hostile conditions, so the intensity \nforecast calls for the system to become a tropical depression in \nabout 12 h and a tropical storm in about 24 h.  However, these winds \nare likely to be well removed from the center.  Interaction with a \nmid-latitude trough could allow some additional strengthening over \nthe Atlantic, and this is reflected in the intensity forecast.  \nRegardless of development, widespread heavy rain will occur over \nportions of western Cuba, the southern Florida Peninsula, the \nFlorida Keys, and the northwestern Bahamas in association with this \nsystem.\n\n\nKEY MESSAGES:\n\n1. Heavy rain associated with the system is expected to continue \nthrough Friday across the eastern portions of the Yucatan Peninsula, \nthe Cayman Islands and western Cuba.  Life-threatening flash \nflooding and mudslides are possible across western Cuba. \n\n2. Heavy rain will begin to affect South Florida and the Florida \nKeys Friday and continue through Saturday. Considerable flash and \nurban flooding is possible across the urban corridors in South \nFlorida and in the Keys. \n\n3. Tropical storm conditions are possible in the watch area in \nwestern Cuba Friday and Friday night, and are possible in the watch \narea in the Florida Peninsula and Florida Keys Friday night and \nSaturday. \n \nFORECAST POSITIONS AND MAX WINDS\n \nINIT  02/2100Z 21.4N  87.5W   30 KT  35 MPH...POTENTIAL TROP CYCLONE\n 12H  03/0600Z 22.3N  87.4W   30 KT  35 MPH...TROPICAL CYCLONE\n 24H  03/1800Z 23.5N  86.5W   35 KT  40 MPH\n 36H  04/0600Z 24.8N  84.9W   35 KT  40 MPH\n 48H  04/1800Z 26.5N  82.3W   35 KT  40 MPH\n 60H  05/0600Z 28.7N  79.3W   40 KT  45 MPH\n 72H  05/1800Z 30.6N  76.0W   45 KT  50 MPH\n 96H  06/1800Z 33.5N  70.0W   45 KT  50 MPH\n120H  07/1800Z 36.0N  64.0W   40 KT  45 MPH\n \n$$\nForecaster Beven\n \nNNNN\n'}



.. GENERATED FROM PYTHON SOURCE LINES 79-82

Lastly, RealtimeStorms also provide the latest available information using the ``get_realtime_info()`` method.

The default argument is ``source='all'``, which returns the latest available data whether from Best Track or NHC Public Advisories. Other possible values are "public_advisory", which only returns the latest public advisory, or "best_track", which only returns the latest best track data.

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: default


    storm.get_realtime_info()




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'source': 'NHC Public Advisory', 'advisory_number': '1', 'time_utc': datetime.datetime(2022, 6, 2, 21, 0), 'type': 'Potential Tropical Cyclone', 'name': 'One', 'lat': 21.4, 'lon': -87.5, 'wind_mph': 35, 'wind_kph': 55, 'wind_kt': 30, 'mslp': 1003, 'category': -1, 'motion_direction': 'N', 'motion_direction_degrees': 360, 'motion_mph': 5, 'motion_kph': 7, 'motion_kt': 4}




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  24.820 seconds)


.. _sphx_glr_download_examples_realtime.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: realtime.py <realtime.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: realtime.ipynb <realtime.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
